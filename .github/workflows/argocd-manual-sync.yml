name: ArgoCD Manual Sync Workflow

on:
  push:
    branches: [ main ]
    paths:
      - 'k3s/**/*.yaml'
      - 'k3s/**/*.yml'
  workflow_dispatch:
    inputs:
      application:
        description: 'Application to sync'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - namespaces
        - monitoring
        - mealie
      sync_strategy:
        description: 'Sync strategy'
        required: true
        default: 'safe'
        type: choice
        options:
        - safe
        - force
        - prune

jobs:
  argocd-sync:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubectl for K3s
      run: |
        echo "🔧 Configuring kubectl for K3s cluster..."
        
        # Create kubeconfig
        mkdir -p ~/.kube
        
        # Set up SSH key for cluster access
        echo "${{ secrets.K3S_SSH_PRIVATE_KEY }}" > ~/.ssh/k3s_key
        chmod 600 ~/.ssh/k3s_key
        
        # Configure SSH
        cat >> ~/.ssh/config << EOF
        Host k3s-master
          HostName ${{ secrets.K3S_MASTER_IP }}
          User ${{ secrets.K3S_SSH_USER }}
          IdentityFile ~/.ssh/k3s_key
          StrictHostKeyChecking no
        EOF

    - name: Setup ArgoCD CLI
      run: |
        echo "📥 Installing ArgoCD CLI..."
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Login to ArgoCD
      run: |
        echo "🔐 Logging into ArgoCD..."
        
        # Copy kubeconfig from master node
        scp -i ~/.ssh/k3s_key ${{ secrets.K3S_SSH_USER }}@${{ secrets.K3S_MASTER_IP }}:~/.kube/config ~/.kube/config
        
        # Get ArgoCD server info
        ARGOCD_SERVER=$(kubectl get svc argocd-server-lb -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
        
        # Login to ArgoCD
        argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure

    - name: Apply ArgoCD Applications
      run: |
        echo "📋 Applying ArgoCD Applications..."
        kubectl apply -f argocd-applications/
        
        # Wait for applications to be created/updated
        sleep 10

    - name: Check Application Status
      run: |
        echo "📊 Checking ArgoCD Application Status..."
        
        # List all applications
        argocd app list
        
        # Check specific application status
        if [ "${{ github.event.inputs.application }}" = "all" ]; then
          echo "🔍 Checking all applications..."
          argocd app get namespaces
          argocd app get monitoring
          argocd app get mealie
        else
          echo "🔍 Checking ${{ github.event.inputs.application }} application..."
          argocd app get ${{ github.event.inputs.application }}
        fi

    - name: Generate Sync Report
      run: |
        echo "📊 ArgoCD Sync Report" >> $GITHUB_STEP_SUMMARY
        echo "====================" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔄 Sync Type: Manual (via GitHub Actions)" >> $GITHUB_STEP_SUMMARY
        echo "📅 Date: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🔗 Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "🎯 Application: ${{ github.event.inputs.application || 'all' }}" >> $GITHUB_STEP_SUMMARY
        echo "⚙️ Strategy: ${{ github.event.inputs.sync_strategy || 'safe' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📋 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Review application status in ArgoCD UI" >> $GITHUB_STEP_SUMMARY
        echo "2. Manually sync applications when ready" >> $GITHUB_STEP_SUMMARY
        echo "3. Monitor deployment progress" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🌐 ArgoCD UI: https://argocd.cooklabs.net" >> $GITHUB_STEP_SUMMARY
