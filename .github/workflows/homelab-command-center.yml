name: Build and Deploy HomeLab Command Center

on:
  push:
    branches: [ main ]
    paths:
      - 'homelab-command-center/**'
      - '.github/workflows/homelab-command-center.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'homelab-command-center/**'
      - '.github/workflows/homelab-command-center.yml'

env:
  REGISTRY: docker.io
  IMAGE_NAME: cookcolin13/homelab-command-center

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      working-directory: homelab-command-center/src
      run: uv sync
    
    - name: Run tests
      working-directory: homelab-command-center/src
      run: uv run python -m pytest tests/ || echo "No tests found, skipping"

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,format=short,prefix=
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: homelab-command-center/src
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Debug tags
      run: |
        echo "Generated tags:"
        echo "${{ steps.meta.outputs.tags }}"
        echo "Commit SHA (full): ${{ github.sha }}"
        echo "Commit SHA (short): ${GITHUB_SHA:0:7}"
        echo "Expected tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA:0:7}"

    - name: Verify image was pushed
      run: |
        echo "Verifying image was pushed with short commit SHA: ${GITHUB_SHA:0:7}"
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA:0:7} || echo "Image not found with short commit SHA tag"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Update Helm chart with new image tag
      run: |
        cd homelab-command-center
        SHORT_SHA=${GITHUB_SHA:0:7}
        # Update only the main application image tag (not PostgreSQL)
        sed -i "/^image:$/,/^imagePullSecrets:/ s/tag: \".*\"/tag: \"$SHORT_SHA\"/" values.yaml
        # Update Chart.yaml version for this release
        CURRENT_VERSION=$(grep '^version:' Chart.yaml | cut -d' ' -f2)
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        sed -i "s/^version: .*/version: $NEW_VERSION/" Chart.yaml
        echo "Updated image tag to $SHORT_SHA and chart version to $NEW_VERSION"
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add homelab-command-center/Chart.yaml homelab-command-center/values.yaml
        git commit -m "chore: update image tag to ${GITHUB_SHA:0:7} and bump chart version" || exit 0
        git push
