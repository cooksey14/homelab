apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 35.4.0
    helm:
      values: |
        deployment:
          podAnnotations:
            prometheus.io/port: "8082"
            prometheus.io/scrape: "true"
          podTemplate:
            spec:
              dnsPolicy: ClusterFirst
              dnsConfig:
                options:
                - name: ndots
                  value: "2"
                - name: single-request
                  value: ""
                - name: single-request-reopen
                  value: ""
                - name: timeout
                  value: "5"
                - name: attempts
                  value: "3"
        additionalArguments:
        - --entrypoints.web.transport.lifeCycle.graceTimeOut=10s
        - --entrypoints.web.transport.respondingTimeouts.idleTimeout=30s
        global:
          systemDefaultRegistry: ""
        image:
          repository: rancher/mirrored-library-traefik
          tag: 3.3.6
        priorityClassName: system-cluster-critical
        providers:
          kubernetesIngress:
            publishedService:
              enabled: true
            ingressClass: traefik
            allowCrossNamespace: false
            allowExternalNameServices: false
            allowEmptyServices: false
            ingressEndpoint:
              hostname: 192.168.86.240
              ip: 192.168.86.240
        serversTransport:
          insecureSkipVerify: true
          maxIdleConnsPerHost: 10
          forwardingTimeouts:
            dialTimeout: 30s
            responseHeaderTimeout: 30s
            idleConnTimeout: 30s
            readIdleTimeout: 30s
            pingTimeout: 15s
        log:
          level: DEBUG
          access:
            enabled: true
            format: json
            fields:
              defaultMode: keep
              headers:
                defaultMode: keep
        accessLog:
          enabled: true
          format: json
          fields:
            defaultMode: keep
            headers:
              defaultMode: keep
        certificatesResolvers:
          letsencrypt:
            acme:
              tlsChallenge: {}
              email: colin@cooklabs.net
              storage: /data/acme.json
              caServer: https://acme-v02.api.letsencrypt.org/directory
        persistence:
          enabled: true
          size: 128Mi
          storageClass: ""
        service:
          type: LoadBalancer
          ipFamilyPolicy: PreferDualStack
          loadBalancerIP: 192.168.86.240
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
