apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wazuh.fullname" . }}-manager
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "wazuh.labels" . | nindent 4 }}
    app.kubernetes.io/component: manager
spec:
  replicas: {{ .Values.manager.replicaCount }}
  selector:
    matchLabels:
      {{- include "wazuh.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: manager
  template:
    metadata:
      labels:
        {{- include "wazuh.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: manager
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "wazuh.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wazuh-config-init
          securityContext:
            {{- toYaml .Values.manager.securityContext | nindent 12 }}
          image: "{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
          command: ["/bin/bash"]
          args:
            - -c
            - |
              echo "Initializing Wazuh configuration..."
              # Copy configuration files from ConfigMap to writable location
              cp /var/ossec/etc/ossec.conf /var/ossec/etc/ossec.conf.template
              cp /var/ossec/etc/internal_options.conf /var/ossec/etc/internal_options.conf.template
              cp /var/ossec/etc/shared/ar.conf /var/ossec/etc/shared/ar.conf.template
              echo "Configuration files copied successfully"
          volumeMounts:
            - name: wazuh-manager-config
              mountPath: /var/ossec/etc/ossec.conf
              subPath: ossec.conf
            - name: wazuh-manager-config
              mountPath: /var/ossec/etc/internal_options.conf
              subPath: internal_options.conf
            - name: wazuh-manager-config
              mountPath: /var/ossec/etc/shared/ar.conf
              subPath: ar.conf
            - name: wazuh-etc
              mountPath: /var/ossec/etc
      containers:
        - name: wazuh-manager
          securityContext:
            {{- toYaml .Values.manager.securityContext | nindent 12 }}
          image: "{{ .Values.manager.image.repository }}:{{ .Values.manager.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
          command: ["/bin/bash"]
          args:
            - -c
            - |
              echo "Starting Wazuh Manager..."
              
              # Copy configuration files from templates to writable location
              cp /var/ossec/etc/ossec.conf.template /var/ossec/etc/ossec.conf
              cp /var/ossec/etc/internal_options.conf.template /var/ossec/etc/internal_options.conf
              cp /var/ossec/etc/shared/ar.conf.template /var/ossec/etc/shared/ar.conf
              
              # Fix permissions for PID files
              chmod 777 /var/ossec/var/run/
              
              # Create SSL certificates for API daemon
              mkdir -p /var/ossec/api/configuration/ssl
              if [ ! -f /var/ossec/api/configuration/ssl/server.key ]; then
                echo "Creating SSL certificates for API daemon..."
                openssl req -x509 -newkey rsa:4096 -keyout /var/ossec/api/configuration/ssl/server.key -out /var/ossec/api/configuration/ssl/server.crt -days 365 -nodes -subj "/C=US/ST=CA/L=San Francisco/O=Wazuh/CN=wazuh-manager"
                chmod 600 /var/ossec/api/configuration/ssl/server.key
                chmod 644 /var/ossec/api/configuration/ssl/server.crt
              fi
              
              # Start core Wazuh daemons in background
              /var/ossec/bin/wazuh-db -d
              sleep 2
              /var/ossec/bin/wazuh-analysisd -d
              sleep 2
              /var/ossec/bin/wazuh-execd -d
              sleep 2
              /var/ossec/bin/wazuh-remoted -d
              sleep 2
              /var/ossec/bin/wazuh-modulesd -d
              sleep 2
              
              # Start API daemon
              /var/ossec/bin/wazuh-apid -d
              sleep 5
              
              echo "All Wazuh daemons started successfully"
              echo "Wazuh Manager is ready"
              
              # Keep the container running and monitor the API daemon
              while true; do
                if ! ls /var/ossec/var/run/wazuh-apid*.pid >/dev/null 2>&1; then
                  echo "API daemon stopped, restarting..."
                  /var/ossec/bin/wazuh-apid -d
                fi
                sleep 30
              done
          env:
            {{- toYaml .Values.manager.env | nindent 12 }}
          ports:
            - name: http
              containerPort: 55000
              protocol: TCP
            - name: agent-comm
              containerPort: 1514
              protocol: TCP
            - name: agent-auth
              containerPort: 1515
              protocol: TCP
          # Temporarily disable health checks to allow pod to be ready
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
          volumeMounts:
            - name: wazuh-logs
              mountPath: /var/log
            - name: wazuh-queue
              mountPath: /var/ossec/queue
            - name: wazuh-integrations
              mountPath: /var/ossec/integrations
            - name: wazuh-agentless
              mountPath: /var/ossec/agentless
            - name: wazuh-wodles
              mountPath: /var/ossec/wodles
            - name: wazuh-var
              mountPath: /var/ossec/var
            - name: wazuh-etc
              mountPath: /var/ossec/etc
            - name: wazuh-ossec-logs
              mountPath: /var/ossec/logs
      volumes:
        - name: wazuh-logs
          hostPath:
            path: /var/log
        - name: wazuh-queue
          emptyDir: {}
        - name: wazuh-integrations
          emptyDir: {}
        - name: wazuh-agentless
          emptyDir: {}
        - name: wazuh-wodles
          emptyDir: {}
        - name: wazuh-var
          emptyDir: {}
        - name: wazuh-etc
          emptyDir: {}
        - name: wazuh-ossec-logs
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
